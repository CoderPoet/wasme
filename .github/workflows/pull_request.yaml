name: pull_request

on:
  push:
    branches:
    - 'master'
  pull_request: {}

jobs:
  e2e:
    name: end-to-end
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
    - uses: engineerd/setup-kind@v0.3.0
      with:
        skipClusterCreation: "true"
    - name: Install Protoc
      uses: arduino/setup-protoc@7ad700d3b20e2a32b35d2c17fbdc463891608381
      with:
        version: '3.6.1'
    - uses: azure/setup-kubectl@v1
      id: kubectl
      with:
        version: 'v1.18.0'
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Vendor
      run: |
        go mod vendor
    - name: Setup env
      env:
        KUBECTL: ${{ steps.kubectl.output.kubectl-path }}
      run: |
        curl -sSL https://get.helm.sh/helm-v3.2.0-linux-amd64.tar.gz | tar -xzf - linux-amd64/helm
        curl -sSL https://github.com/istio/istio/releases/download/1.5.1/istio-1.5.1-linux.tar.gz | tar -xzf - istio-1.5.1/bin/istioctl
        export PATH=$PWD/istio-1.5.1/bin:$PWD/linux-amd64:$(dirname $KUBECTL):$PATH
        go get -u github.com/onsi/ginkgo/ginkgo
        ./ci/setup-kind.sh
    - name: Testing
      env:
        KUBECTL: ${{ steps.kubectl.output.kubectl-path }}
      run: |
        export PATH=$(dirname $KUBECTL):$PATH
        FILTER_IMAGE_TAG=localhost:5000/test:v1 ginkgo -r -v test/e2e/build/
        FILTER_IMAGE_TAG=yuval-test.solo.io/ilackarms/test-image:v0.0.1 ginkgo -r -v test/e2e/deploy
        FILTER_IMAGE_TAG=yuval-test.solo.io/ilackarms/test-image:v0.0.1 ginkgo -r -v test/e2e/operator

